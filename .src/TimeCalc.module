' Gambas module file

'Format date as SRT time (00:00:27,000)
Public Function getTime(datetime As Date) As String
    
    Dim strTime As String = Time(datetime)
    Dim strFormattedTime As String
    
    If Len(strTime) == 0 Then
        Return "00:00:00,000"
    Endif
    
    strFormattedTime = Mid(strTime, 1, 8) & "," & Mid(strTime, 10, 1) & "00"
    Return strFormattedTime
    
End

'Convert human readable time into decimal time (5h3m6s to 05:03:06)
'strLeadingZeros only has effect if component is selected
Public Function ConvertHTimeToDecimal(strTime As String, Optional strLeadingZeros As Boolean = False, Optional component As String = "all") As String
    
    Dim strDecimalTime As String
    Dim intLocationHour As Integer
    Dim intLocationMinutes As Integer
    Dim intLocationSeconds As Integer
    
    Dim strRestOfTime As String
    Dim arrstrSplit As String[]
    
    Dim positionSeconds As Integer = -1
    
    intLocationHour = InStr(strTime, "h")
    intLocationMinutes = InStr(strTime, "m")
    intLocationSeconds = InStr(strTime, "s")
    
    'Already decimal
    
    If intLocationHour == 0 And intLocationMinutes == 0 And intLocationSeconds == 0 Then
        If component == "all" Then
            If InStr(strTime, "00:") < 2 Then
                Return "00:" & Mid(strTime, 4)
            Endif
            Return strTime
        Endif
        If component == "h" Then
            Return ZeroTime(Mid(strTime, 1, 2), strLeadingZeros)
        Endif
        If component == "m" Then
            Return ZeroTime(Mid(strTime, 4, 2), strLeadingZeros)
        Endif
        If component == "s" Then
            Return ZeroTime(Mid(strTime, 7, 2), strLeadingZeros)
        Endif
    Endif
    
    If intLocationHour > 0 Then
        arrstrSplit = Split(strTime, "h")
        strDecimalTime = ZeroPadTime(arrstrSplit[0])
        
        If component == "h" Then
            Return ZeroTime(arrstrSplit[0], strLeadingZeros)
        Endif
        
        If arrstrSplit[1] <> Null Then
            strRestOfTime = arrstrSplit[1]
        End If
    Else
        strDecimalTime = "00"
        strRestOfTime = strTime
    Endif
    
    'Minutes without m but with h (for example, 5h8 is 5 hours and 8 minutes)
    If intLocationMinutes == 0 And strRestOfTime <> "" And intLocationHour > 0 Then
        positionSeconds = InStr(arrstrSplit[1], "s")
        If component == "m" Then
            If positionSeconds > -1 Then
                Return ""
            Endif
            Return ZeroTime(arrstrSplit[1], strLeadingZeros)
        Endif
        If positionSeconds == 0 Then
           strDecimalTime &= ":" & ZeroPadTime(arrstrSplit[1])
        Endif
    Endif

    If intLocationMinutes > 0 Then
        arrstrSplit = Split(strRestOfTime, "m")
        If component == "m" Then
            Return ZeroTime(arrstrSplit[0], strLeadingZeros)
        Endif

        If Len(strDecimalTime) > 0 Then
            strDecimalTime &= ":" & ZeroPadTime(arrstrSplit[0])
        Else
            strDecimalTime = ZeroPadTime(arrstrSplit[0])
        Endif

        If arrstrSplit[1] <> Null Then
            If component == "s" Then
                Return ZeroTime(arrstrSplit[1], strLeadingZeros)
            Endif
            strDecimalTime &= ":" & ZeroPadTime(arrstrSplit[1])
            Return strDecimalTime
        End If
    Else
        'If strRestOfTime = "" Then
        '    strRestOfTime = strTime
        'Endif
        strDecimalTime &= ":00"
    Endif
    
    'Seconds without s but with m (for example, 5m8 is 5 minutes and 8 seconds)
    If intLocationSeconds > 0 Then
        arrstrSplit = Split(strRestOfTime, "s")
        If component == "s" Then
            Return ZeroTime(arrstrSplit[0], strLeadingZeros)
        Endif
        
        If Len(strDecimalTime) > 0 Then
            strDecimalTime &= ":" & ZeroPadTime(arrstrSplit[0])
        Else
            strDecimalTime = ZeroPadTime(arrstrSplit[0])
        Endif
    Endif

    Return strDecimalTime
    
End

Public Function ZeroPadTime(strTime As String) As String
    
    If Len(strTime) = 1 Then
        Return "0" & strTime
    End If
    
    Return strTime
    
End

Public Function ZeroUnpadTime(strTime As String) As String
    
    If Mid(strTime, 1, 1) == "0" Then
        Return Mid(strTime, 2)
    Endif
    
    Return strTime
    
End

Public Function ZeroTime(strTime As String, strLeadingZeros As Boolean) As String
    
    If strLeadingZeros Then
        Return ZeroPadTime(strTime)
    Else
        Return ZeroUnpadTime(strTime)
    End If
    
End

'Convert 04:05:06 to 4h5m6s and convert 05:06 to 5m6s
'Parameter strLeadingZeros pads or unpads the time components.
'When strLeadingZeros is true, the result is 04h05m06s
'When strLeadingZeros is false, it is 4h5m6s
'Paramater component allows for partial results
'If component is all, all components are returned
'Component can be h, m or s
Public Function ConvertDecimalTimeToHTime(strTime As String, Optional strLeadingZeros As Boolean = False, Optional component As String = "all") As String
    
    Dim strHTime As String
    Dim arrstrTime As String[]
    
    arrstrTime = Split(strTime, ":")
    If arrstrTime.Count == 3 Then
        'Hour is included
        
        If component = "h" Then
            Return ZeroTime(arrstrTime[0], strLeadingZeros)
        Endif
        If component = "m" Then
            Return ZeroTime(arrstrTime[1], strLeadingZeros)
        Endif
        If component = "s" Then
            Return ZeroTime(arrstrTime[2], strLeadingZeros)
        Endif
        strHTime = ZeroTime(arrstrTime[0], strLeadingZeros) & "h" & ZeroTime(arrstrTime[1], strLeadingZeros) & "m" & ZeroTime(arrstrTime[2], strLeadingZeros) & "s"
        
    Endif
    
    If arrstrTime.Count = 2 Then
        'Only minutes and seconds
        
        If component = "m" Then
            Return ZeroTime(arrstrTime[0], strLeadingZeros)
        Endif
        If component = "s" Then
            Return ZeroTime(arrstrTime[1], strLeadingZeros)
        Endif
        
        strHTime = ZeroTime(arrstrTime[0], strLeadingZeros) & "m" & ZeroTime(arrstrTime[1], strLeadingZeros) & "s"
    Endif
    
    Return strHTime

End

Public Function getSeconds(datetime As String) As String
    
  Return (ConvertDecimalTimeToHTime(datetime, False, "h") * 3600 + ConvertDecimalTimeToHTime(datetime, False, "m") * 60 + ConvertDecimalTimeToHTime(datetime, False, "s")) & ""
  'More performant, but more error prone too?:
  'Dim arrstrTime As String[] = Split(datetime, ":")
  'Val(arrstrTime[0]) * 3600 + Val(arrstrTime[1]) * 60 + Val(arrstrTime[2])
End



